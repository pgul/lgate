.* $Id$
:userdoc.
:title.LuckyGate Manual
:docprof.

.*****************************************************************************
:h1 id='register.doc'.About LuckyGate
.im register.ipf

.****************************************************************************
:h1 id='start.doc'.Quick start
.im start.ipf

.****************************************************************************
:h1 id='gate.doc'.Features
:p.
Вашему вниманию предлагается гейт fido<->uucp, поддерживающий
гейтование как личной почты (netmail), так и эхоконференций.
:p.
Быстрый способ инсталляции описан в файле
:link reftype=hd refid='start.doc'.start.doc:elink..
:p.
Несколько замечаний.
:ul.
:li.
чтобы сделать интернетовскую конференцию в fido r/o, нужно завести
локального пользователя и описать его как newsserver для этой эхи, а
его почтовый ящик просто удалять при возникновении.
Другой вариант - поставить соответствующие привелегии в эхопроцессоре.
:li.
чтобы сделать фидошную эху в интернете r/o, нужно просто на нее не
подписываться на узле. Вариант с эхопроцессором также подходит.
:eul.
В обоих случаях вариант с привелегиями в эхопроцессоре мне кажется более
предпочтительным, т.к., во-первых, вы можете себе оставить возможность
писать письма и, во-вторых, по bad-ам вы сможете увидеть попытки написать
в r/o конференцию.
:p.
Параметр :hp1.seen-by:ehp1. стоит включить, если возможно двойное гейтование и
при этом Вы отдаете (и берете) гейтуемые конференции по ftn-сети. Если
же Вы гейтуете почту только для себя (чтобы читать конференции из golded)
и никому другому их не отправляете, то этот параметр лучше выключить,
чтобы не засорять заголовки usenet-сообщений. В случае получения/отправки
почты через news-server этот параметр значения не имеет. Поэтому :hp5.очень:ehp5.
не рекомендуется отдавать кому-то гейтуемую почту, получаемую от
ньюссервера (а не по cnews) - он обрезает все служебные поля (message-id,
path, seen-by), считая их ненужными (для internet это действительно так),
в результате очень повышается вероятность дупов (неотлавливаемых!).
:p.
При гейтовании модерируемых конференций им необходимо дать параметр /feed
в строке group, и там же указать адрес mailnews-сервера для того, чтобы
при написании письма из fido сервер отправил его модератору, а не в
badmail, как произойдет при отправке по cnews. Принимать их при этом можно
и по cnews.
:p.
Если вы хотите свою личную интернетовскую почту читать фидошным редактором,
нужно в своем домашнем каталоге поместить файл :hp1.forward:ehp1., состоящий только
из вашего фидошного адреса, как он виден из интернета, и прописать себя
в поле :hp1.chaddr:ehp1. в gate.cfg. В этом случае приходящая личная почта будет
переправляться на адрес, написанный в файле :hp1.forward:ehp1., далее гейтоваться
и попадать в netmail folder. При ответе письмо будет гейтоваться в
relcom с заменой вашего адреса на обычный интернетовский и ваш корреспондент
не будет испытывать никаких неудобств (а если нет tearline, то и вообще
не заметит, что вы ему отвечали из фидошного редактора).
:p.
Для обратной возможности (чтение фидошной почты интернетовским
редактором) Вам нужно прописать в файле forward.cfg строки типа
:lines.
forward 2&colon.463/68 2&colon.463/68.128 "Pavel Gulchouck" gul@gul.kiev.ua
forward 2&colon.463/68 2&colon.463/68.128 "Yutta Kussul" yutta@k-i-s-s.kiev.ua
forward 2&colon.463/68 2&colon.463/68.128 "" postmaster@gul.kiev.ua
:elines.
.br
(по строке для каждого пользователя) и вставить вызов :hp1.forward.exe:ehp1. перед
запуском :hp1.fido2rel.exe:ehp1. (а лучше еще и по приходу почты).
:p.

.*****************************************************************************
:h2. Правила трансляции адресов
:p.
При гейтовании из fido обратный адрес строится следующим образом:
:lines.
Firstname_Lastname@[p{p}.]f{f}.n{n}.z{z}.{domain} (Firstname Lastname)
:elines.
где:
:parml compact break=none tsize=10.
:pt.Firstname Lastname :pd.- имя сисопа,
:pt.{z}:pd.- зона
:pt.{n}:pd.- сеть
:pt.{f}:pd.- узел
:pt.{p}:pd.- поинт
:pt.{domain} - домен, прописанный первым в gate.cfg.
:eparml.
В квадратных скобках прописаны части, могущие отсутствовать (нулевой поинт
не пишется).
:p.
Например, адрес Pavel Gulchouck 2&colon.463/68 будет выглядеть из интернета как
"Pavel_Gulchouck@f68.n463.z2.fidonet.carrier.kiev.ua (Pavel Gulchouck)", если
в списке доменов первым идет fidonet.carrier.kiev.ua. Если в имени сисопа
присутствует символ '@', то оно просто переносится в поле from без изменений.
:p.
При гейтовании из интернета как фидошный исходящий адрес ставится адрес
гейта (указанный первым в gate.cfg), как имя сисопа указывается его
uupc-адрес, а первой строкой письма пишется "RealName: Его Реальное Имя",
если таковое есть в заголовке. Если uucp-адрес слишком длинный и не
помещается в поле from заголовка, то в заголовок пишется "From: uucp",
а в начале письма - "From: <long_address>". В этом случае не гейтуются
поля аттрибуты RRQ и CFM (т.к. они все равно не попадут по назначению).
Определяется случай повторного гейтования и если uucp-адрес оказывается
фидошным, он разбирается и прописывается в заголовок вместо адреса гейта.
При установленном параметре :hp1.golded=yes:ehp1. вместо строки Realname пишется
клудж "\1RFC-From&colon." со строкой "From&colon." из заголовка. В этом случае GoldEd
начиная с версии 2.50 (вроде бы) показывает все довольно красиво.
:p.
Теперь про поле To.
:p.
При гейтовании в фидо разбираются следующие форматы адреса:
:lines.
Firstname{_|.}Lastname@[p{p}.]f{f}.n{n}.z{z}.{domain}
[Firstname{_|.}Lastname%][{z}.]{n}/{f}[.{p}@{domain}
:elines.
где:
:parml compact break=none tsize=10.
:pt.Firstname Lastname :pd.- имя сисопа (по умолчанию SysOp),
:pt.{z}:pd.- зона (по умолчанию зона, в которой происходит гейтование)
:pt.{n}:pd.- сеть
:pt.{f}:pd.- узел
:pt.{p}:pd.- поинт (по умолчанию 0)
:pt.{domain}:pd.- любой из доменов, прописанных в gate.cfg
:pt.{_|.}:pd.- любой из символов '_' или '.'
:eparml.
В квадратных скобках указаны необязательные параметры, при их отсутствии
берется умолчание. В имени сисопа '.' заменяется на пробел только в том
случае, если нет ни одного '_'.
:p.
Например, мне можно из интернета писать на (кроме приведенного выше адреса)
:lines.
Pavel_Gulchouck@p0.f68.n463.z2.fidonet.org (если попадет на нужный гейт)
Pavel_Gulchouck%2.463/68.0@fidonet.carrier.kiev.ua
463/68@fidonet.carrier.kiev.ua (прийдет на имя SysOp)
gul@gul.kiev.ua ;-)
:elines.
:p.
Но это все ни к чему, т.к. достаточно знать один (любой) формат адреса и
его использовать, а лучше просто отвечать на адрес, указанный в поле From
письма, на которое отвечаете.
:p.
Для гейтования сообщений об ошибках в доставке письма, отправляемых
обычно по бэнговому адресу из поля "From ", поддерживаются также адреса
типа gul.kiev.ua!fidonet!f68.n463.z2.fidonet.org!Pavel_Gulchouck
или gul.kiev.ua!fidonet!463/68, хотя я очень не рекомендую
использовать их в нормальной ситуации.
:p.
Из fido в relcom писать несколько проще: как фидошный адрес указывается
адрес гейта (любой), а в поле to пишется uucp-адрес. Если он туда не
помещается, то в заголовке пишется "To: uucp", а первой строкой письма -
"To&colon. <long_address>".
:p.

.**************************************************************************
:h2 id='templates'.Темплейты
:p.
Если строка начинается с :hp1.@if:ehp1., :hp1.@else:ehp1., :hp1.@endif:ehp1.,
:hp1.@ifdef:ehp1., :hp1.@ifndef:ehp1., :hp1.@elsif:ehp1.,
:hp1.@set:ehp1., :hp1.@text:ehp1. или для badaddr-tpl :hp1.@header:ehp1. -
это служебная строка. Все остальные строки, начинающиеся с
символа '@' игнорируются и могут быть использованы как комментарии.
Вместо :hp1.@text:ehp1. подставляется текст оригинального письма, вместо
:hp1.@header:ehp1. - его заголовок.
:p.
Строка :hp1.@if:ehp1. имеет вид
.br
@if [not] <line1>==<line2>
.br
например,
.br
@if [reason]==binary
.br
или
.br
@if not "[tomaster]"=="yes"
.br
Строки сравниваются ignore case. Строка
.br
@ifdef <var>
.br
эквивалентна
.br
@if not "<var>"==""
.br
ну а
.br
@ifndef <var>
.br
эквивалентна
.br
@if "<var>"==""
.br
Кроме того, возможно сравнение с маской или с регулярным выражением
при помощи операции "=~", например,
.br
@if [fromaddr] =~ MAILER-DAEMON@*
.br
или
.br
@if not [reason] =~ /^itwit-(to|from)$/
:p.
Строка :hp1.@set:ehp1. имеет вид
.br
@set <var>=<string>
.br
Строка <string> может быть заключена в кавычки. Например,
.br
@set GateName="Fido<->Internet Gate"
:p.
В тексте (в т.ч. в служебных строках) все подстроки типа [var] заменяются
на значение переменной var, или выкидываются, если такой переменной нет,
если только не установлено :hp1.@vars no:ehp1.. Регистр букв в именах переменных
роли не играет. Присвоить или изменить значение переменной можно при
помощи :hp1.@set:ehp1.. Все подстроки :hp1.`cmd`:ehp1. заменяются на stdout команды cmd,
например, :hp1."domain=`hostname`":ehp1.. Если строка заканчивается на '%', 
следующая строка считается ее продолжением. Все сказанное выше относится и к файлу
gate.cfg, с той разницей, что символ '@' в начале строки не нужен. В темплейтах
обрабатываются последовательности \n, \r, \t, \s, \%, \[, \`, \\ (в gate.cfg
это не так, потому что символ '\' часто встречается в путях. В gate.cfg
вместо символа '[' нужно писать '[[]', вместо '`' - [`]). Можно также установить в
темплейте :hp1.@vars no:ehp1. (в gate.cfg - :hp1.vars no:ehp1.), и
тогда до :hp1.@vars yes:ehp1. подстановка переменных производиться не будет,
квадратными скобками в этом случае можно пользоваться как обычно, не
заменяя '[' на '[[]'. Если в любом темплейте присвоить какое-либо
значение переменной :hp1.DontSend:ehp1., письмо не будет отправлено.
Для reject-tpl и badaddr-tpl есть возможность отправлять сообщения еще
и гейтмастеру. Т.о. шлется два письма по одному темплейту, но для письма
гейтмастеру выставляется переменная :hp1.ToMaster=yes:ehp1.,
которую можно использовать, например, чтобы не пересылать мастеру текст
самого письма, а только заголовок. В этом случае фрагмент темплейта будет
выглядеть так&colon.
:xmp.
@if not "[ToMaster]"=="Yes"
@text
@endif
:exmp.
:p.
Значение переменной может браться из командной строки (ключ -d) или
из environment.
:p.
Значение переменной может браться из командной строки (ключ -d) или
из environment. Кроме того, существуют переменные
:parml compact break=none tsize=15.
:pt.OS:pd.- "OS/2" или "MSDOS";
:pt.Module:pd.- "Fido2Rel", "Rel2Fido" или "Attuucp".
:eparml.
:p.
Предопределенные переменные для всех темплейтов&colon.
:parml compact break=none tsize=15.
:pt.Subject:pd.- строка subject создаваемого письма (ее можно переопределять);
:pt.OldSubject:pd.- строка subject оригинального письма;
:pt.Size:pd.- размер оригинального письма в байтах;
:pt.LocalDate:pd.- текущая дата в формате "01 Jan 96";
:pt.LocalTime:pd.- текущее время в формате "00&colon.04&colon.01".
:eparml.
:p.
Для reject-tpl&colon.
:parml compact break=none tsize=15.
:pt.GateName:pd.- поле from создаваемого письма (можно менять);
по умолчанию "FTN->Internet Gate";
:pt.GateAddr:pd.- адрес from создаваемого письма (можно менять);
:pt.ToAddr:pd.- адрес To оригинального письма;
:pt.ToName:pd.- Internet-address, куда пытались отправить письмо;
:pt.FromAddr:pd.- адрес To оригинального письма;
:pt.FromName:pd.- имя From оригинального письма;
:pt.MastName:pd.- имя гейтмастера;
:pt.MastAddr:pd.- FTN-адрес гейтмастера;
:pt.Date:pd.- Поле Date оригинального письма;
:pt.Reason:pd.- причина отлупа. Возможные значения:
:parml compact break=none tsize=15.
:pt.binary:pd.- попытка отправки uucode, когда это запрещено,
:pt.size:pd.- превышение допустимого размера письма,
:pt.twit:pd.- FromAddr попал под параметр twit в gate.cfg,
:pt.destination:pd.- ToName не описан как send-to либо описан как no-send,
:pt.noaddress:pd.- не задан internet address;
:pt.attach:pd.- попытка гейтования аттача, когда это запрещено;
:pt.external:pd.- так сказал fido2rel-chk.
:eparml.
:eparml.
:p.
Для held-tpl&colon.
.br
GateName, GateAddr, Date имеют то же значение, что в reject-tpl; GateName
по умолчанию "Internet->FTN Gate";
:parml compact break=none tsize=15.
:pt.FromName:pd.- имя отправителя письма (может быть не определено);
:pt.FromAddr:pd.- Internet-address отправителя;
:pt.ToName:pd.- имя To получателя;
:pt.ToAddr:pd.- FTN-адрес получателя;
:pt.Uplink:pd.- FTN-адрес системы-аплинка (для гейта, т.е., как правило, это
адрес гейтмастера);
:pt.FileName:pd.- (при [reason]==attach) имя приаттаченного файла;
:pt.FilePath:pd.- (при [reason]==attach) путь приаттаченного файла на диске;
:pt.StoreFileName:pd.- (при [reason]==attach) имя приаттаченного файла, под которым он сохранен;
:pt.Message-Id:pd.- ID захолженного письма или аттача;
:pt.Reason:pd.- Причина, по которой файл лежит на холде. Возможные значения:
:parml compact break=none tsize=15.
:pt.Size:pd.- письмо слишком большое;
:pt.Attach:pd.- пришел file attach.
:eparml.
:eparml.
:p.
Для badaddr-tpl:
:parml compact break=none tsize=15.
:pt.From:pd.- адрес отправителя оригинального письма (из "From:");
:pt.Sender:pd.- адрес отправителя оригинального письма (из From_);
:pt.Gate:pd.- gate internet address. По умолчанию - MAILER-DAEMON@local.domain,
где local.domain - ваш uucp-домен (можно изменять);
:pt.Master:pd.- internet-address гейтмастера;
:pt.To:pd.- адрес назначения оригинального письма;
:pt.Boundary:pd.- Случайная строка (используется при multipart);
:pt.Multipart:pd.- Создавать отлуп как text/plain, или как multipart/report;
По умолчанию multipart=no, т.е. создается text/plain,
хотя если template не указан совсем, будет сделан multipart;
:pt.Reason:pd.- причина отлупа. Возможные значения:
:parml compact break=none tsize=15.
:pt.BadAddress:pd.- некорректный адрес To;
:pt.TooManyHops:pd.- too many hops (-;
:pt.ITwit:pd.- адрес From попадает под itwit;
:pt.ITwit-To:pd.- адрес в строке "To&colon." попадает под itwit-to;
:pt.ITwit-From:pd.- адрес envelope-from (из From_) попадает под itwit-from;
:pt.ITwit-Via:pd.- в пути письма присутствует хост, описанный в itwit-via;
:pt.FileAttach:pd.- письмо содержит файлаттач при decode-attach=deny;
:pt.TooLarge:pd.- размер письма больше holdsize при holdhuge=no;
:pt.External:pd.- так сказал rel2fido-chk.
:eparml.
:eparml.
:nt text='WARNING&colon.'. При multipart необходимо самому оформлять все части,
иначе корректного письма не получится. То есть: части разделять
"--[boundary]", перед которой пустая строка, а после которой
rfc-заголовок (который может быть и пустым), потом пустая строка
и текст. То же нужно сделать в самом начале темплейта. В конце
надо поставить "--[boundary]--".
:ent.
В случае [Reason]==TooManyHops доступны еще переменные Hops и MaxHops.
:p.

.******************************************************************************
:h2 id='checkers'.Внешние чекеры.
:p.
Если вам не хватает параметров send, no-send, twit, no-twit, itwit,
chaddr и т.п., и хочется чего-то большего, вы можете это сделать сами,
написав свою программку, определяющую, надо ли слать письмо и
подменяющую адреса. Для этого не обязательно уметь программировать
на C или Pascal - вы можете написать ее на каком-нибудь интерпретируемом
языке (Basic, MultiEdit, Rexx,...) и запускать интерпретатор. Конечно,
это будет дольше, но время критично далеко не всегда, особенно, если
это использовать только для netmail. Для OS/2-версии это функция REXX,
и ее выполнение достаточно эффективно, и задержек практически не
происходит.
:p.
Программа подключается параметрами :hp1.rel2fido-chk:ehp1. или
:hp1.fido2rel-chk:ehp1.. У этих строк такие параметры&colon.
.br
rel2fido-chk <mask> [<cmdline>]
.br
fido2rel-chk <mask> [<cmdline>]
.br
В командной строке понимаются макросы %from, %to, %size, %area.
Возможные коды завершения&colon.
:parml compact break=none tsize=10.
:pt.  0 :pd.- default для stdout
:pt.  1 :pd.- default
:pt.  2 :pd.- всегда слать, используя stdout
:pt.  3 :pd.- всегда слать то, что есть
:pt.  4 :pd.- в /dev/null (все уже сделано)
:pt.  5 :pd.- отлуп (только для netmail)
:pt.  6 :pd.- hold для stdout (только для rel2fido netmail)
:pt.  7 :pd.- hold (только для rel2fido netmail)
:eparml.
:p.
Возможные значения <mask>&colon.
:parml compact break=none tsize=15.
:pt.  All, Any :pd.- всегда (netmail &amp. echomail)
:pt.  Echo :pd.- только для echomail
:pt.  <wildcard> :pd.- проверяется только для netmail, относится к адресу to.
:eparml.
:p.
Если командная строка не задана, проверка не происходит. Это иногда удобно
из-за того, что всегда используется только первый подошедший чекер.
:p.
Например,
:lines.
rel2fido-chk *.ua
rel2fido-chk * c&colon.\lgate\rechk.exe %from %to %size
fido2rel-chk echo c&colon.\lgate\fchk.exe %from %to %size %area
:elines.
:p.
Чекеры выводят первой строкой адрес (или список адресов) to, второй,
возможно, адрес from, и третей, возможно, список конференций, если они
кодом завершения сказали использовать свой stdout. Это дает возможность
использовать их вместо chaddr.
:p.
Все адреса и area передаются в rfc-формате (т.е. как в Internet).
Для netmail вместо %area подставляется "NetMail".
:p.

.****************************************************************************
:h2 id='viauucp'.Организация ftn-линка via uucp
:p.
Если у вас и на еще каком-нибудь узле есть доступ к internet, то при
помощи LuckyGate вы можете организовать линк с этим узлом. Для этого
существует несколько способов&colon.
:ol.
:li.:link reftype=hd refid='doublegating'.Двойное гейтование:elink..
:li.:link reftype=hd refid='uucode'.Uucode:elink..
:li.:link reftype=hd refid='uucp'.Uucp:elink..
:eol.
:p.
:nt text='Внимание!'. При передаче файлов в uucode или через uucp нельзя параллельно
с работой attuucp.exe запускать эхопроцессор, склонный к удалению
оторванных файлов в outbound-е (например, gecho). Потому что attuucp
сначала удаляет аттачи, а потом уже сами файлы, и некоторое время
файлы смотрятся как оторванные. Для fastecho и прочих распространенных
эхопроцессоров это не страшно, потому что на это время выставляются
флаги занятости этих станций.
:ent.
:p.

:h3 id='doublegating'.Двойное гейтование
:p.
Этот способ позволяет обмениваться только netmail-ом в случае, если на
другом узле также установлен какой-либо гейт. Организовать такой линк очень
просто: достаточно в gate.cfg (или в файле, включаемом туда по include)
написать строку, скажем,
:lines.
route-to fidonet.carrier.kiev.ua 2&colon.463/*
:elines.
.br
В этом случае все письма на 2&colon.463/* (не имеющие атрибутов hold, direct,
crash, immadiate и пр.) будут гейтоваться. Причем, скажем, письмо на
Pavel Gulchouck 2&colon.463/68 отправится по адресу
Pavel_Gulchouck@f68.n463.z2.fidonet.carrier.kiev.ua, т.е. домен после
зоны напишется указанный в команде route-to. Если в этом домене встречается
символ '@', то все предыдущие '@' заменятся на '%', например, при указании
:lines.
route-to fidonet.org@carrier.kiev.ua 2&colon.463/*
:elines.
.br
то же письмо отправится на
Pavel_Gulchouck%f68.n463.z2.fidonet.org@carrier.kiev.ua
Этим следует пользоваться осторожно, т.к. в uupc by ache версий до 6.14
такая форма адресации обрабатывается ошибочно и если у вас в файле
conf\hostpath написано, скажем,
:lines.
*.fidonet.org fidonet
:elines.
.br
то такое письмо все равно улетит на fidonet, а не на carrier. Чтобы этого
избежать, надо в файл hostpath добавить строку типа
:lines.
*.n463.z2.fidonet.org carrier
:elines.
.br
(если carrier - ваш основной аплинк). Но это тоже несколько опасно для
случая, если, скажем, узел carrier (аплинк) отдает весь *.fidonet.org
вам, т.к. возможен пинг-понг. Поэтому правила роутинга необходимо
согласовать с постмастером вашего узла.
:p.
При гейтовании писем по команде route-to не происходит изменение адреса
по chaddr, не действуют ограничения на no-send, binary и twit, длинные
строки не разбиваются.
:p.
Команда to-ifmail очень похожа на команду route-to с той разницей, что
гейтуемые письма приобретают наиболее приемлимый для ifmail формат, а
именно:
:ul.
:li.@via не преобразуется в received, а остается полем X-FTN-Via;
:li.rrq и cfm не преобразуются в return-receipt-to, а добавляется поле
X-FTN-Flags, куда пишутся все флаги письма;
:li.пробелы в именах сисопов заменяются не на '_', а на '.'.
:eul.
Команду to-ifmail следует использовать вместо route-to в случае, если
на гейте, с которым вы делаете линк, стоит ifmail.
:p.
Проследите за правильным указанием маршрутизации для ftn-мейлера, т.е.
чтобы почта не улетала по обычному роутингу и чтобы мейлер не пытался
сам прозвониться на другой узел.
:p.
Если узел, с которым вы хотите обмениваться почтой по этой технологии,
не пишет зону, а возможно, и сеть, в доменный адрес при перекодировке
ftn-адресов в internet, то вам необходимо сделать трансляцию доменов,
типа
:lines.
chdomain .fido.vista.odessa.ua .n467.z2.fidonet.org
:elines.
.br
тогда адреса приходящих писем типа SysOp@p3.f15.fido.vista.odessa.ua
перед обработкой будут заменяться на SysOp@p3.f15.n467.z2.fidonet.org
и в последствии нормально преобразовываться в первоначальный фидошный
адрес (2&colon.467/15.3). Аналогично, при отправке писем через этот гейт вы
можете написать
:lines.
route-to fidonet.org 2&colon.467/*
:elines.
.br
в результате письма в 467/* будут гейтоваться и адрес преобразовываться
сначала в SysOp@p3.f15.n467.z2.fidonet.org, а потом по chdomain в
SysOp@p3.f15.fido.vista.odessa.ua.
:p.
Из всех правил роутинга route-to, to-ifmail, no-route действует
последнее подходящее.
:p.

:h3 id='uucode'.Uucode
:p.
В этом случае все почтовые и остальные аттачи на узел, с которым у вас
линк, отправляются обычной почтой в uucode. Для этого вам необходимо
завести локального пользователя вашей почтовой системы (uupc), скажем,
fnet, попросить удаленного сисопа сделать то же и написать в gate.cfg
примерно следующее:
:lines.
route-uue fnet@gul.kiev.ua 2&colon.463/68
filebox=fnet
:elines.
.br
где
:parml compact break=none tsize=10.
:pt.2&colon.463/68 :pd.- узел, с которым вы делаете линк,
:pt.fnet :pd.- ваш локальный пользователь,
:pt.fnet@gul.kiev.ua :pd.- пользователь на удаленном узле.
:eparml.
:p.
Если вы используете не arcmail attach и не binkley style, то вам
необходимо каким-то образом все аттачи на этот узел складывать в
отдельный каталог и написать следующее&colon.
:lines.
route-uue fnet@gul.kiev.ua 2&colon.463/68 c&colon.\fido\out\2\463\68
:elines.
.br
где c&colon.\fido\out\2\463\68 - каталог, куда складываются все аттачи для 2&colon.463/68.
:p.
Для binkley style достаточно вместо параметра pktin указать параметр
binkoutbound.
:p.
Вот полное описание формата и ключей route-uue&colon.
:lines.
route-uue [/base64] [/pgp] [/split=<size>] [/password=<passwd>] [/sign] [/confirm[=t1,t2]] <internet-address> <ftn-address> [<path>]
:elines.
.br
:parml compact break=none tsize=15.
:pt.<path>:pd.- файлбокс. Все файлы из этого каталога будут отправляться по
данному адресу.
:pt./base64, /mime:pd.- слать файл в base64;
:pt./pgp:pd.- слать файл pgp encrypted (для этого pgp должен быть инсталлирован
с обеих сторон, и должен быть известен public pgp key той стороны).
В этом случае ставится "Content-Transfer-Encoding&colon. x-pgp".
:pt./sign:pd.- сделать pgp-сигнатуру (pgp должен быть установлен). При этом
будет требоваться pgp-сигнатура при приеме файлов от этого линка,
т.е. этот ключ должен быть установлен с обеих сторон. Сигнатура
пишется полем заголовка "X-PGP-Sig&colon." (многострочным).
:pt./password:pd.- указать пароль на линк. Этот же пароль будет проверяться
при приеме файлов от этого линка, т.е. он должен быть прописан
с обеих сторон. Пароль совершенно не нужен, если используется
ключ /sign, т.к. pgp обеспечивает гораздо большую степень защиты.
Пароль регистрозависим, максимальная длина 32 символа. Пишется
открытым текстом в поле заголовка X-Password каждой части.
:pt./split:pd.- разбивать большие файлы на части размером не более <size> килобайт.
Файл будет автоматически собираться из частей на приеме, если
там используется attuucp или любой другой софт, понимающий
Content-Type&colon. message/partial.
:pt./confirm:pd.- сохранить отправляемое письмо в каталоге sentdir и запросить
подтверждение приема файла ("X-Confirm-To&colon."). Письма будут
удалены после получения подтверждения, либо отправлены заново
в случае получения сообщения об ошибке (например, crc error).
При отсутствии подтверждения файл будет отправляться через
интервалы t1 в течение t2. Интервалы задаются в формате
NNh или NNd, например, "/confirm=12h,3d" - отправлять каждые
12 часов в течение трех суток, если нет подтверждения.
Если интервалы не указаны, используются предыдущие. Если
вообще не указаны, используется умолчание 12h,3d. Для того,
чтобы это работало, удаленный софт должен поддерживать этот
формат запросов/подтверждений (пока это только LuckyGate 6.01+),
иначе каждый файл будет отправляться несколько раз (дупы).
:p.
Формат запроса&colon. в заголовке должно быть поле
X-Confirm-To&colon. user@domain
где user@domain - адрес, куда отправить подтверждение.
Использование угловых и круглых скобок не допускается (пока?).
:p.
Формат подтверждения&colon. в заголовке письма должно быть поле
:lines.
X-Confirm-Status&colon. (OK|FAIL) <msgid> (comment)
:elines.
.br
msgid - message-id или, для multipart, part id в угловых скобках.
OK означает успешную распаковку всего файла (а не успешное
получение письма). Comment - произвольный комментарий
(причина fail, дата приема etc.). Например,
:lines.
X-Confirm-Status&colon. OK <12-234-asd@lucky.net> (unsecure)
X-Confirm-Status&colon. FAIL <21-432-asd@lucky.net> (can't decode pgp)
:elines.
:eparml.
:p.
Ключи /pgp и /sign могут применяться как вместе, так и по отдельности,
потому что выполняют разные задачи.
:p.
Если не указано ни /mime, ни /pgp, используется uuencode, в этом
случае ставится "Content-Transfer-Encoding&colon. x-uuencode".
:p.
Файлаттач считается секьюрным, если он пришел от известного адреса
(описанного в одной из команд route-uue) и содержит указанные в этой
строке аттрибуты секьюрити&colon. пароль либо pgp-сигнатуру. Такие файлаттачи
складываются в каталог pktout для последующего тоссинга. Несекьюрные
аттачи (от неизвестных адресов, а также с отсутствующим или неправильным
паролем или pgp-сигнатурой, если что-то из этого нужно) складываются в
каталог unsecure, если он указан, либо пересылаются постмастеру, если
не указан. Письма, не содержащие файлаттачей (например, сообщения роботов
о невозможности доставки), пересылаются постмастеру.
:p.
Всем этим занимается утилита attuucp.exe, поэтому вам необходимо
вставить ее вызов в начале (для отправки аттачей) и в конце (для
обработки пришедших пакетов) файла uupc.bat.
:p.
Проследите за тем, чтобы весь netmail для этого узла паковался в
почтовые пакеты, чтобы на них не ставились аттрибуты hold, direct, crash
и пр., либо (что imho хуже) нужно поставить параметр norm-only=no.
При обмене файлэхами с узлом, на котором нет LuckyGate, лучше сами файлы
паковать в один большой zic, тогда у них сохранится дата и время
создания. При обмене LuckyGate-LuckyGate, он сам позаботится об этом.
Также надо быть аккуратным с отправкой больших архивов - на некоторых
узлах максимальный размер письма ограничен до 300K. В этом случае вам
следует попросить своего постмастера увеличить его мегабайт до пяти
(смотря какие архивы вы планируете передавать), либо использовать
ключ /split, если на той стороне тоже LuckyGate.
:p.
FTN-аттачи, отправленные LuckyGate'ом, можно отличить от обычных
писем по наличию поля заголовка "X-FTNattach-Version&colon." (в данный
момент там ставится "1.0"). В поле "Content-Type&colon." ставятся параметры
"crc32=" и "name=". Поле "Subject&colon." формируется по следующему
принципу:
:lines.
Subject&colon. 12345678.su0, 2/3; 22.08.99 10&colon.52&colon.06
:elines.
:p.
или, если разбиения на части нет, просто
:lines.
Subject&colon. 12345678.su0; 02.11.98 10&colon.52&colon.06
:elines.
:p.
Дата и время - это время модификации (mtime) отправляемого файла,
локальное для отправителя.

:p.
Если в файле uupc\conf\passwd описать юзера примерно так&colon.
:cgraphic.
fnet&colon.&colon.&colon.&colon."FidoNet Daemon"&colon.c&colon.\lgate&colon.c&colon.\lgate\attuucp.exe -l<
:ecgraphic.
.br
то есть последним параметром (shell) указать "attuucp -l<", то приходящие
на этот адрес письма будут обрабатываться на этапе uuxqt (для этого версия
UUPC не должна быть младше 6.14h). В этом случае можно не добавлять запуск
attuucp.exe в конце uupc.bat (но в начале все равно надо добавить).
:p.
Для sendmail в файле aliases можно прописать
:cgraphic.
fnet&colon. "| c&colon.\lgate\attuucp.exe -l"
:ecgraphic.
.br
:p.
Если один файл нужно отправить нескольким линкам, он будет отправлен
одним запуском sendmail, если для этих линков прописан одинаковый
метод кодирования, не используется pgp encrypting, не нужно запрашивать
подтверждение, и либо все понимают разбиение на части, либо всем файл
можно отправить одним куском.
:p.
Во время работы attuucp по отправке файлов нельзя параллельно запускать
allfix - в этом случае возможна потеря файлов.
:p.

:h3 id='uucp'.Uucp
:p.
Отправка файловых аттачей на удаленный узел при помощи uucp.
!Предупреждение! это очень опасный способ, не используйте его, если вы не
вполне понимаете, что происходит и если вы не пользовались командой uucp!
Это почти то же самое, что и передача архивов в uucode, с той разницей,
что передача идет по uucp. Для того, чтобы передавать архивы таким
образом, вам следует написать в gate.cfg, например,
:lines.
route-files carrier!luckyua!~ 2&colon.463/*
:elines.
.br
т.е. адрес заменяется на полный uucp-путь к системе. Вам файлы будут
приходить в каталог uupc\public, откуда вам надо при нулевом коде
завершения uucico.exe (чтобы быть уверенным, что все файлы полностью
приняты) в файле uupc.bat их переместить в ваш inbound-каталог для тоссинга.
:p.
Замечания:
:ol.
:li.Вам необходимо убедиться, что на всех узлах по пути команда uucp
поддерживает транзит и для вас разрешена (что обычно не так).
:li.Вам необходимо убедиться, что утилита uucp.exe существует и корректно
работает с ключем -C. В версиях uupc до 6.14 она не работает.
:li.Вам необходимо быть уверенным, что не возникнет ситуации, когда
пересылается два файла с одинаковыми именами в промежуток, когда
принимающая система не успела принять первый из них. Это могут быть два
почтовых пакета *.??9, либо случай, когда у вашего
абонента неделю нет связи со своим узлом, либо еще что-нибудь. В этом
случае второй из пакетов просто будет потерян.
:eol.
:p.

.****************************************************************************
:h2.Некоторые технические данные
:p.       
При гейтовании из интернета большие письма разбиваются на части,
русская 'Н' заменяется на латинскую 'H'. Аттрибуты RRQ и CFM гейтуются
в обе стороны (за исключением длинного интернетовского адреса). При
повторном прохождении письма через гейт (relcom->fido->relcom или
fido->relcom->fido) оно (почти) не меняется: сохраняются исходные
MsgId, via (received), pid (x-mailer) и другие клуджи (поля заголовка),
причем поля гейтуются не "в лоб" (@PID -> X-FTN-PID и 
Received -> @RFC-Received), а в наиболее близкие по смыслу
(@PID -> X-Mailer, Received -> @Via с изменением порядка на обратный и т.п.),
что делает гейтованое письмо более читаемым и понятным в другой сети
и дает возможность последующего нормального гейтования в другие самые
разнообразне сети.
:p.
Делались попытки достичь совместимости в этом отношении с uu2 и ifmail,
а также с fsc. Остановился на некотором компромиссном варианте.
:p.
Имя uucp-системы в UUPC/Ache не может быть длиннее семи символов.
Поэтому если в конфигах UUPC оно длиннее, в конфиге LuckyGate (параметр
fidosystem) нужно оставить только первые семь символов имени этой
системы.
:p.
В случае ошибки при гейтовании личного письма из fido в relcom, оно
(файл *.msg) переименовывается в *.bad (или перекладывается в badmail,
если он указан), и если письмо не прошло через гейт из-за какого-то
ограничения, то автору посылается письмо с указанием этой причины.
Копия этого письма отправляется сисопу на гейте в соответствии с
заданным темплейтом. Если же гейтование не удалось из-за какой-либо
локальной ошибки (например, переполнен диск), то сообщение об этой ошибке
выдается на экран и записывается в файл протокола.
:p.
При ошибке гейтования эхоконференций из fido в relcom, весь pkt-файл
переименовывается в *.bad и причина пишется на экран и в лог-файл.
:p.
При невозможности гейтования личного письма из relcom в fido, оно
переправляется на постмастера гейта и возвращается автору в соответствии
с заданными templates.
:p.
При ошибке гейтования конференции из relcom в fido, весь почтовый
ящик или cnews-пакет переименовывается в *.bad, либо (если письмо
корректно, но такой конференции не существует либо письмо личное),
оно переписывается в badmail.pst. Личные письма могут пересылаться
постмастеру, если указано resend-bad=yes.
:p.

.*****************************************************************************
:h2.Ограничения
:sl.   
:li.Максимальная длина названия конференции - 80 символов.
:li.Максимальная вложенность файлов конфигурации (include) - 5.
:li.Максимальная вложенность @if в темплейтах - 16.
:li.Максимальное количество переменных (@set) в темплейтах - 64.
:li.Максимальная длина списка адресов при гейтовании из fido - 128.
:esl.
:p.
Гейт работает только с UUPC by Andrey Chernov ver 5.x, 6.x, 7.x,
с UUPC/Ext by Kendra, и с sendmail/2 ver 2.02; Тестировался с версиями
UUPC/Ache от 5.09gamma до 7.02, UUPC/Ext 1.12l и 1.12r и sendmail/2.
:p.
Из-за ошибки в rmail.exe гейт не работает с UUPC/Ext 1.12p - ее нужно
заапгрейдить до 1.12r или более поздней.
:p.
Из-за ошибки в rnews.exe гейт не работает с Changi старше 0.5.
:p.

.*****************************************************************************
:h1 id='FAQ'.FAQ
.im faq.ipf

.*****************************************************************************
:h1 id='sendmail'.Работа с sendmail/2
.im sendmail.ipf

.*****************************************************************************
:h1 id='techdoc.txt'.TechDoc
.im techdoc.ipf

.***************************************************************************
:h1.ToDo list
.im todo.ipf
:p.

.***************************************************************************
:h1.History
.im history.ipf

.***************************************************************************
:h1. Контакты
:p.                
Меня можно найти по адресам Pavel Gulchouck 2&colon.463/68 или
gul@gul.kiev.ua, а также в эхе LUCKY.GATE.
:p.
Конференция lucky.gate доступна по nntp на сервере news.lucky.net.
:p.
Сам LuckyGate распространяется по файлэхе LUCKY.GATE и по списку
рассылки в internet. Кроме того, последняя версия всегда доступна на
ftp&colon.//happy.kiev.ua/pub/fidosoft/gate/lgate/*.
:p.
Пожалуйста, если кто-нибудь выкладывает LuckyGate на свой ftp, сообщите
об этом, чтобы сделать официальный mirror. Тогда я смогу давать на него
ссылки, и сообщать об изменении URL, если такое случится.
:lines align=right.
:rm margin=20.
Lucky carrier,
:rm margin=1.
Павел Гульчук.
:elines.
:p.

:euserdoc.
